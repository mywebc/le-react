{"version":3,"sources":["webpack:///../src/components/drawer/Drawer.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Drawer","Button","Api","className","title","onClose","visible","placement","isMDXComponent"],"mappings":"2RAUaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,qCACA,iBAAQ,CACN,GAAM,QADR,QAGA,kDACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yRAA4RC,SAAO,GACpUJ,QACAH,kBACAQ,eACAC,UACAC,WACAC,WACAC,SAPoU,gBAQpUZ,IARoU,EASpUH,eAToU,GAUnUO,QAAQ,cACX,mBAAKS,UAAU,SACX,YAAC,IAAD,CAAQT,QAAQ,UAAhB,WACA,YAAC,IAAD,CAAQU,MAAO,eAAgBC,QAAS,aAErCC,SAAS,EAAOZ,QAAQ,UACzB,yCACA,yCACA,4CAIN,iBAAQ,CACN,GAAM,SADR,SAGA,+EACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wbAAmcC,SAAO,GAC3eJ,QACAH,kBACAQ,eACAC,UACAC,WACAC,WACAC,SAP2e,gBAQ3eZ,IAR2e,EAS3eH,eAT2e,GAU1eO,QAAQ,cACX,mBAAKS,UAAU,SACX,YAAC,IAAD,CAAQT,QAAQ,UAAhB,WACA,YAAC,IAAD,CAAQa,UAAW,MAAOb,QAAQ,UAAlC,OACA,YAAC,IAAD,CAAQa,UAAW,OAAQb,QAAQ,UAAnC,QACA,YAAC,IAAD,CAAQa,UAAW,SAAUb,QAAQ,UAArC,UACA,YAAC,IAAD,CAAQU,MAAO,eAAgBC,QAAS,aAErCC,SAAS,EAAOC,UAAW,QAASb,QAAQ,UAC7C,yCACA,yCACA,4CAIN,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAKA,QAAQ,c,gNAKjBH,EAAWiB,gBAAiB","file":"component---src-components-drawer-drawer-mdx-5aa191375717cb326101.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/chenxiaole/learnTrain/le-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Drawer from \"./Drawer\";\nimport { Demo as Button } from \"./Demo\";\nimport Api from \"./Api\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3 {...{\n      \"id\": \"drawer-抽屉\"\n    }}>{`Drawer 抽屉`}</h3>\n    <p>屏幕边缘滑出的浮层面板。</p> \n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <p>基础抽屉，点击触发按钮抽屉从右滑出，点击遮罩区关闭</p>\n    <Playground __position={2} __code={'<div className=\\\"basis\\\">\\n  <Button>default</Button>\\n  <Drawer\\n    title={\\'Basic Drawer\\'}\\n    onClose={() => {\\n      /*...doclose*/\\n    }}\\n    visible={false}\\n  >\\n    <p>Some contents...</p>\\n    <p>Some contents...</p>\\n    <p>Some contents...</p>\\n  </Drawer>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Drawer,\n      Button,\n      Api,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div className=\"basis\">\n        <Button mdxType=\"Button\">default</Button> \n        <Drawer title={\"Basic Drawer\"} onClose={() => {\n          /*...doclose*/\n        }} visible={false} mdxType=\"Drawer\">\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Drawer>\n    </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义位置\"\n    }}>{`自定义位置`}</h2>\n    <p>通过placement自定义设置滑出位置,可选有right,bottom,left,top,默认为right</p>\n    <Playground __position={4} __code={'<div className=\\\"basis\\\">\\n  <Button>default</Button>\\n  <Button placement={\\'top\\'}>top</Button>\\n  <Button placement={\\'left\\'}>left</Button>\\n  <Button placement={\\'bottom\\'}>bottom</Button>\\n  <Drawer\\n    title={\\'Basic Drawer\\'}\\n    onClose={() => {\\n      /*...doclose*/\\n    }}\\n    visible={false}\\n    placement={\\'right\\'}\\n  >\\n    <p>Some contents...</p>\\n    <p>Some contents...</p>\\n    <p>Some contents...</p>\\n  </Drawer>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Drawer,\n      Button,\n      Api,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div className=\"basis\">\n        <Button mdxType=\"Button\">default</Button> \n        <Button placement={\"top\"} mdxType=\"Button\">top</Button> \n        <Button placement={\"left\"} mdxType=\"Button\">left</Button> \n        <Button placement={\"bottom\"} mdxType=\"Button\">bottom</Button> \n        <Drawer title={\"Basic Drawer\"} onClose={() => {\n          /*...doclose*/\n        }} visible={false} placement={\"right\"} mdxType=\"Drawer\">\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Drawer>\n    </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`Api`}</h2>\n    <Api mdxType=\"Api\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}